#!/bin/bash -e
#
# S2I assemble script for the 'payara-server4' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

# If the 'payara-server4' assemble script is executed with the '-h' flag, print the usage.
if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/. ./
fi

#echo "---> Installing application source..."
#cp -Rf /tmp/src/. ./

echo "---> Building application from source..."
# TODO: Add build steps for your application, eg npm install, bundle install, pip install, etc.i
ls -la /opt/payara41/glassfish/domains/domain1/autodeploy/
#svn checkout --non-interactive --no-auth-cache --trust-server-cert --username samuel.lin --password samuel0918 https://collabnet.kooppi.com:8443/svn/nttca-new-portal/trunk/profile-management
#svn checkout --non-interactive --no-auth-cache --trust-server-cert --username samuel.lin --password samuel0918 https://collabnet.kooppi.com:8443/svn/nttca-new-portal/branches/profile-management-dashboard-branch/profile-management-core-ejb
#cd profile-management
#mvn clean install
find /tmp -name profile-management-core-ear-1.0.ear
ls -la /tmp/src
cp -Rf /tmp/src/. ./
cp ./profile-management-core-ear-1.0.ear /opt/payara41/glassfish/domains/domain1/autodeploy/
ls -la /opt/payara41/glassfish/domains/domain1/autodeploy/
